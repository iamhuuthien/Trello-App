@import "tailwindcss";

/* Force light mode colors (use Tailwind-like palette) */
:root {
  --background: #f9fafb; /* gray-50 */
  --foreground: #0f172a; /* slate-900 */
  --muted: #6b7280; /* gray-500 */

  --primary: #2563eb; /* blue-600 */
  --primary-hover: #1d4ed8; /* blue-700 */

  --secondary: #ffffff; /* white */
  --secondary-hover: #f3f4f6; /* gray-100 */

  --border: #e5e7eb; /* gray-200 */
  --card: #ffffff;
  --card-foreground: #0f172a; /* slate-900 */

  --radius: 0.5rem;
}

/* Ensure browser renders as light color-scheme */
html { color-scheme: light; }

/* Override any dark-mode rules: make .dark and prefers-color-scheme dark act like light */
@media (prefers-color-scheme: dark) {
  :root {
    --background: #f9fafb;
    --foreground: #0f172a;
    --muted: #6b7280;

    --primary: #2563eb;
    --primary-hover: #1d4ed8;

    --secondary: #ffffff;
    --secondary-hover: #f3f4f6;

    --border: #e5e7eb;
    --card: #ffffff;
    --card-foreground: #0f172a;
  }
}

/* Also override Tailwind 'dark' class targets by forcing base element colors */
.dark, .dark * {
  background-color: transparent !important;
  color: inherit !important;
}

/* Apply global */
body {
  background-color: var(--background);
  color: var(--foreground);
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI",
    Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji",
    "Segoe UI Emoji";
  line-height: 1.5;
}

/* Ensure form controls and buttons have good contrast on white backgrounds */
input,
textarea,
select {
  color: var(--foreground) !important;
  background-color: var(--card) !important;
  border: 1px solid var(--border) !important;
  padding: 0.5rem;
  border-radius: 0.5rem;
  outline: none;
}

input::placeholder,
textarea::placeholder {
  color: var(--muted) !important;
}

/* Buttons fallback styles for any places not using the Button component */
button {
  color: var(--foreground);
  background-color: transparent;
  border-radius: 0.5rem;
  border: 1px solid transparent;
  padding: 0.5rem 0.75rem;
}

/* utility classes used in some components: .btn-primary, .btn-secondary */
.btn-primary {
  background-color: var(--primary);
  color: #fff;
  border: 1px solid var(--primary);
}
.btn-primary:hover { background-color: var(--primary-hover); }

.btn-secondary {
  background-color: var(--secondary);
  color: var(--foreground);
  border: 1px solid var(--border);
}

/* small helper utilities to force readable foreground on white cards (apply locally) */
.force-foreground { color: #0f172a !important; } /* slate-900 */
.force-text-muted { color: #475569 !important; } /* slate-600 */
.force-bg-white { background-color: #ffffff !important; }

/* interactive cursor hints + drag handle helpers */
button, a, input[type="button"], input[type="submit"], .interactive {
  cursor: pointer;
}

/* drag handles */
.draggable-handle {
  cursor: grab;
  -webkit-user-drag: none;
  touch-action: none;
}
.draggable-handle:active,
.draggable-handle.dragging {
  cursor: grabbing;
}

/* draggable element (visual hint) */
.draggable {
  transition: transform 120ms ease, box-shadow 120ms ease;
}
.draggable:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 18px rgba(15, 23, 42, 0.06);
}

/* subtle hover for cards/columns */
.card-hoverable:hover,
.column-hoverable:hover {
  background-color: #fbfdff;
  box-shadow: 0 6px 18px rgba(15,23,42,0.04);
}

/* ensure grabbing cursor when global dragging state applied */
[data-dndkit-dragging="true"] .draggable,
[data-dndkit-dragging="true"] .draggable-handle {
  cursor: grabbing !important;
}
